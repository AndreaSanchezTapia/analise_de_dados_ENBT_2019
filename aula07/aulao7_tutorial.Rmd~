---
title: 'Tutorial aula 07: Criando e salvando gráficos no R'
author: "Sara Mortara, Andrea Sánchez-Tapia & Diogo S. B. Rocha"
date: "18.07.2019"
output: 
    html_document:
        theme: cosmo
        toc: yes
---

# Funções básicas para gráficos no R base e ggplot2:


Vocês já viram isto ontem, mas vamos retomar as funções básicas de gráficos no R e seu equivalente no ggplot2. 

Funções gráficas no R base e no ggplot2: 


Tipo de gráfico | R base | ggplot2 |
----------|------------|-----------|
barras | barplot() | geom_bar() |
histogram | histogram() | geom_histogram() |
densidade | plot(density()) | geom_density() |
quantil-quantil |	qqnorm()	| geom_qq() |
box-plot | boxplot() | geom_boxplot() |
dispersão | plot() | geom_point() |

Nesta aula, vamos explorar os gráficos de dispersão, box-plot e gráficos de barras. 

## Gráfico de dispersão

Carregue o arquivo contendo dados de salário de homens e mulheres em empresas de tecnologia que está no diretório da aula de hoje data/salario.csv. Salve o arquivo em sua pasta /data e vamos reproduzir o gráfico da aula. 

```{r }
# lendo os dados
sal <- read.csv("data/salarios.csv")
# criando objetos para auxiliar a construção do gráfico
# criando modelos lineares
mh <- lm(salario ~ experiencia, data=sal[sal$sexo=="H",])
mm <- lm(salario ~ experiencia, data=sal[sal$sexo=="M",])
coefh <- coef(mh)
coefm <- coef(mm)
# definindo os limites dos eixos
limy <- c(min(sal$salario),max(sal$salario))
limx <- c(min(sal$experiencia),max(sal$experiencia))
## definindo os nomes dos eixos
labx <- "Experiência (anos)"
laby <- "Salário (R$)"
```

Agora vamos construir o gráfico em si. 


```{r, echo=FALSE }
# define parametros graficos
par(mfrow=c(1,2), las=1, bty="l") # aqui estamos usando las e bty dentro do par para fixar para todas as janelas
# plot dos valores de salario dos homens
plot(salario ~ experiencia, data=sal[sal$sexo=="H",], 
     col="tomato",
     ylim=limy, xlim=limx,
     ylab=laby, xlab=labx)
# linha do previsto pelo modelo
## a + b*x 
abline(a=coefh[1], b=coefh[2],
       col='tomato', lwd=2)
mtext("A", 3, adj=0, font=2)
## plot do salario das mulheres
plot(salario ~ experiencia, data=sal[sal$sexo=="M",], 
     col="navy",
     ylim=limy, xlim=limx,
     ylab="", xlab=labx)
mtext("B", 3, adj=0, font=2)
# linha do previsto pelo modelo
## a + b*x 
abline(a=coefm[1], b=coefm[2],
       col='navy', lwd=2)
```
## Exportando o gráfico com a função `png`

Queremos exportar esse gráfico. Para isso, primeiro crie um diretório /figs em seu repositório. Para exportar o gráfico vamos usar a função png, especificando a resolução e dimensões da figura. 



```{r, echo=FALSE }
png("figs/figura01.png", res=300, width=2400, height=1200)
# define parametros graficos
par(mfrow=c(1,2), las=1, bty="l") # aqui estamos usando las e bty dentro do par para fixar para todas as janelas
# plot dos valores de salario dos homens
plot(salario ~ experiencia, data=sal[sal$sexo=="H",], 
     col="tomato",
     ylim=limy, xlim=limx,
     ylab=laby, xlab=labx)
# linha do previsto pelo modelo
## a + b*x 
abline(a=coefh[1], b=coefh[2],
       col='tomato', lwd=2)
mtext("A", 3, adj=0, font=2)
## plot do salario das mulheres
plot(salario ~ experiencia, data=sal[sal$sexo=="M",], 
     col="navy",
     ylim=limy, xlim=limx,
     ylab="", xlab=labx)
mtext("B", 3, adj=0, font=2)
# linha do previsto pelo modelo
## a + b*x 
abline(a=coefm[1], b=coefm[2],
       col='navy', lwd=2)
dev.off()

```

## Gráfico de densidade

# 
